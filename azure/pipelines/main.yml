variables:
- group: helm-pipeline


stages:
- stage: Build_And_Push_Helm
  displayName: "Build and Push Helm Charts to ACR"
  jobs:
  - job: PackAndPushHelm
    displayName: "Pack and Push Helm Charts to ACR"
    steps:
    - task: HelmInstaller@1
      displayName: "Install Helm"
      inputs:
        helmVersion: 'latest'
    - script: |
        # Визначаємо версію, наприклад з файла Chart.yaml
        VERSION=$(grep '^version:' ./helm/Chart.yaml | awk '{print $2}')
        echo "##vso[task.setvariable variable=CHART_VERSION;isOutput=true]$VERSION"
      displayName: "Extract and Set Helm Chart Version"

    - script: |
        helm lint ./helm
        echo $(CHART_VERSION)
        echo $(Build.BuildId)
        echo "$(CHART_VERSION).$(Build.BuildId)"
        helm package ./helm --version "$(CHART_VERSION).$(Build.BuildId)" --destination ./artifacts
      displayName: "Lint and Pack Helm Charts"

    - task: AzureCLI@2
      displayName: "Login to Azure and push actifact"
      inputs:
        azureSubscription: "lnu_sub"
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az acr login --name $(ACR)
          export HELM_EXPERIMENTAL_OCI=1
          helm push ./artifacts/myapp-$(CHART_VERSION).$(Build.BuildId).tgz oci://$(ACR).azurecr.io/helmrepo

    

- stage: Deploy_to_AKS
  displayName: "Deploy to AKS"
  dependsOn: Build_And_Push_Helm
  jobs:
  - job: Deploy
    displayName: "Deploy to AKS"
    steps:
    - task: AzureCLI@2
      displayName: "Login to Azure"
      inputs:
        azureSubscription: "lnu_sub"
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials --resource-group $(resource-group) --name $(aks-cluster)
          az acr login --name $(ACR)
          export HELM_EXPERIMENTAL_OCI=1
          helm pull oci://$(ACR).azurecr.io/helmrepo/myapp --version $(CHART_VERSION).$(Build.BuildId)
          helm upgrade --install myapp myapp-$(CHART_VERSION).$(Build.BuildId).tgz

